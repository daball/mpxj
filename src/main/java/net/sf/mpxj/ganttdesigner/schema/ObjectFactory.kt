//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2019.02.10 at 09:33:54 PM GMT
//

package net.sf.mpxj.ganttdesigner.schema

import javax.xml.bind.annotation.XmlRegistry

/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the net.sf.mpxj.ganttdesigner.schema package.
 *
 * An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
/**
 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sf.mpxj.ganttdesigner.schema
 *
 */
@XmlRegistry
class ObjectFactory {

    /**
     * Create an instance of [Gantt]
     *
     */
    fun createGantt(): Gantt {
        return Gantt()
    }

    /**
     * Create an instance of [Gantt.FootersFonts]
     *
     */
    fun createGanttFootersFonts(): Gantt.FootersFonts {
        return Gantt.FootersFonts()
    }

    /**
     * Create an instance of [Gantt.HeadersFonts]
     *
     */
    fun createGanttHeadersFonts(): Gantt.HeadersFonts {
        return Gantt.HeadersFonts()
    }

    /**
     * Create an instance of [Gantt.Holidays]
     *
     */
    fun createGanttHolidays(): Gantt.Holidays {
        return Gantt.Holidays()
    }

    /**
     * Create an instance of [Gantt.DateHeader]
     *
     */
    fun createGanttDateHeader(): Gantt.DateHeader {
        return Gantt.DateHeader()
    }

    /**
     * Create an instance of [Gantt.Columns]
     *
     */
    fun createGanttColumns(): Gantt.Columns {
        return Gantt.Columns()
    }

    /**
     * Create an instance of [Gantt.TextStyles]
     *
     */
    fun createGanttTextStyles(): Gantt.TextStyles {
        return Gantt.TextStyles()
    }

    /**
     * Create an instance of [GanttDesignerRemark]
     *
     */
    fun createGanttDesignerRemark(): GanttDesignerRemark {
        return GanttDesignerRemark()
    }

    /**
     * Create an instance of [Gantt.Tasks]
     *
     */
    fun createGanttTasks(): Gantt.Tasks {
        return Gantt.Tasks()
    }

    /**
     * Create an instance of [Gantt.Globalization]
     *
     */
    fun createGanttGlobalization(): Gantt.Globalization {
        return Gantt.Globalization()
    }

    /**
     * Create an instance of [Gantt.Display]
     *
     */
    fun createGanttDisplay(): Gantt.Display {
        return Gantt.Display()
    }

    /**
     * Create an instance of [Gantt.File]
     *
     */
    fun createGanttFile(): Gantt.File {
        return Gantt.File()
    }

    /**
     * Create an instance of [Gantt.FirstDay]
     *
     */
    fun createGanttFirstDay(): Gantt.FirstDay {
        return Gantt.FirstDay()
    }

    /**
     * Create an instance of [Gantt.LastDay]
     *
     */
    fun createGanttLastDay(): Gantt.LastDay {
        return Gantt.LastDay()
    }

    /**
     * Create an instance of [Gantt.Padding]
     *
     */
    fun createGanttPadding(): Gantt.Padding {
        return Gantt.Padding()
    }

    /**
     * Create an instance of [Gantt.BarStyles]
     *
     */
    fun createGanttBarStyles(): Gantt.BarStyles {
        return Gantt.BarStyles()
    }

    /**
     * Create an instance of [Gantt.Calendar]
     *
     */
    fun createGanttCalendar(): Gantt.Calendar {
        return Gantt.Calendar()
    }

    /**
     * Create an instance of [Gantt.Headers]
     *
     */
    fun createGanttHeaders(): Gantt.Headers {
        return Gantt.Headers()
    }

    /**
     * Create an instance of [Gantt.Footers]
     *
     */
    fun createGanttFooters(): Gantt.Footers {
        return Gantt.Footers()
    }

    /**
     * Create an instance of [Gantt.Print]
     *
     */
    fun createGanttPrint(): Gantt.Print {
        return Gantt.Print()
    }

    /**
     * Create an instance of [Gantt.PrintToImageFile]
     *
     */
    fun createGanttPrintToImageFile(): Gantt.PrintToImageFile {
        return Gantt.PrintToImageFile()
    }

    /**
     * Create an instance of [Gantt.Copy]
     *
     */
    fun createGanttCopy(): Gantt.Copy {
        return Gantt.Copy()
    }

    /**
     * Create an instance of [Gantt.ChartColor]
     *
     */
    fun createGanttChartColor(): Gantt.ChartColor {
        return Gantt.ChartColor()
    }

    /**
     * Create an instance of [Gantt.FootersFonts.Font]
     *
     */
    fun createGanttFootersFontsFont(): Gantt.FootersFonts.Font {
        return Gantt.FootersFonts.Font()
    }

    /**
     * Create an instance of [Gantt.HeadersFonts.Font]
     *
     */
    fun createGanttHeadersFontsFont(): Gantt.HeadersFonts.Font {
        return Gantt.HeadersFonts.Font()
    }

    /**
     * Create an instance of [Gantt.Holidays.Holiday]
     *
     */
    fun createGanttHolidaysHoliday(): Gantt.Holidays.Holiday {
        return Gantt.Holidays.Holiday()
    }

    /**
     * Create an instance of [Gantt.DateHeader.Tier]
     *
     */
    fun createGanttDateHeaderTier(): Gantt.DateHeader.Tier {
        return Gantt.DateHeader.Tier()
    }

    /**
     * Create an instance of [Gantt.DateHeader.Reference]
     *
     */
    fun createGanttDateHeaderReference(): Gantt.DateHeader.Reference {
        return Gantt.DateHeader.Reference()
    }

    /**
     * Create an instance of [Gantt.Columns.Header]
     *
     */
    fun createGanttColumnsHeader(): Gantt.Columns.Header {
        return Gantt.Columns.Header()
    }

    /**
     * Create an instance of [Gantt.TextStyles.Font]
     *
     */
    fun createGanttTextStylesFont(): Gantt.TextStyles.Font {
        return Gantt.TextStyles.Font()
    }

    /**
     * Create an instance of [GanttDesignerRemark.Task]
     *
     */
    fun createGanttDesignerRemarkTask(): GanttDesignerRemark.Task {
        return GanttDesignerRemark.Task()
    }

    /**
     * Create an instance of [Gantt.Tasks.Task]
     *
     */
    fun createGanttTasksTask(): Gantt.Tasks.Task {
        return Gantt.Tasks.Task()
    }

    /**
     * Create an instance of [Gantt.Globalization.Culture]
     *
     */
    fun createGanttGlobalizationCulture(): Gantt.Globalization.Culture {
        return Gantt.Globalization.Culture()
    }

    /**
     * Create an instance of [Gantt.Globalization.UICulture]
     *
     */
    fun createGanttGlobalizationUICulture(): Gantt.Globalization.UICulture {
        return Gantt.Globalization.UICulture()
    }

    /**
     * Create an instance of [Gantt.Globalization.Currency]
     *
     */
    fun createGanttGlobalizationCurrency(): Gantt.Globalization.Currency {
        return Gantt.Globalization.Currency()
    }

}
