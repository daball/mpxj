//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2018.10.04 at 10:52:38 AM BST
//

package net.sf.mpxj.phoenix.schema

import javax.xml.bind.annotation.XmlRegistry

/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the net.sf.mpxj.phoenix.schema package.
 *
 * An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
/**
 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sf.mpxj.phoenix.schema
 *
 */
@XmlRegistry
class ObjectFactory {

    /**
     * Create an instance of [Project]
     *
     */
    fun createProject(): Project {
        return Project()
    }

    /**
     * Create an instance of [Project.CpmChecker]
     *
     */
    fun createProjectCpmChecker(): Project.CpmChecker {
        return Project.CpmChecker()
    }

    /**
     * Create an instance of [Project.Filters]
     *
     */
    fun createProjectFilters(): Project.Filters {
        return Project.Filters()
    }

    /**
     * Create an instance of [Project.Filters.Filter]
     *
     */
    fun createProjectFiltersFilter(): Project.Filters.Filter {
        return Project.Filters.Filter()
    }

    /**
     * Create an instance of [Project.Layouts]
     *
     */
    fun createProjectLayouts(): Project.Layouts {
        return Project.Layouts()
    }

    /**
     * Create an instance of [Project.Layouts.Layout]
     *
     */
    fun createProjectLayoutsLayout(): Project.Layouts.Layout {
        return Project.Layouts.Layout()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.ViewSettings]
     *
     */
    fun createProjectLayoutsLayoutViewSettings(): Project.Layouts.Layout.ViewSettings {
        return Project.Layouts.Layout.ViewSettings()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.RolledupStates]
     *
     */
    fun createProjectLayoutsLayoutRolledupStates(): Project.Layouts.Layout.RolledupStates {
        return Project.Layouts.Layout.RolledupStates()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.NetworkLines]
     *
     */
    fun createProjectLayoutsLayoutNetworkLines(): Project.Layouts.Layout.NetworkLines {
        return Project.Layouts.Layout.NetworkLines()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.CodeOptions]
     *
     */
    fun createProjectLayoutsLayoutCodeOptions(): Project.Layouts.Layout.CodeOptions {
        return Project.Layouts.Layout.CodeOptions()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Bars]
     *
     */
    fun createProjectLayoutsLayoutBars(): Project.Layouts.Layout.Bars {
        return Project.Layouts.Layout.Bars()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Bars.BarGroup]
     *
     */
    fun createProjectLayoutsLayoutBarsBarGroup(): Project.Layouts.Layout.Bars.BarGroup {
        return Project.Layouts.Layout.Bars.BarGroup()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Timescale]
     *
     */
    fun createProjectLayoutsLayoutTimescale(): Project.Layouts.Layout.Timescale {
        return Project.Layouts.Layout.Timescale()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Comparisons]
     *
     */
    fun createProjectLayoutsLayoutComparisons(): Project.Layouts.Layout.Comparisons {
        return Project.Layouts.Layout.Comparisons()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Columns]
     *
     */
    fun createProjectLayoutsLayoutColumns(): Project.Layouts.Layout.Columns {
        return Project.Layouts.Layout.Columns()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Sort]
     *
     */
    fun createProjectLayoutsLayoutSort(): Project.Layouts.Layout.Sort {
        return Project.Layouts.Layout.Sort()
    }

    /**
     * Create an instance of [Project.Storepoints]
     *
     */
    fun createProjectStorepoints(): Project.Storepoints {
        return Project.Storepoints()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint]
     *
     */
    fun createProjectStorepointsStorepoint(): Project.Storepoints.Storepoint {
        return Project.Storepoints.Storepoint()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Relationships]
     *
     */
    fun createProjectStorepointsStorepointRelationships(): Project.Storepoints.Storepoint.Relationships {
        return Project.Storepoints.Storepoint.Relationships()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Resources]
     *
     */
    fun createProjectStorepointsStorepointResources(): Project.Storepoints.Storepoint.Resources {
        return Project.Storepoints.Storepoint.Resources()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Resources.Resource]
     *
     */
    fun createProjectStorepointsStorepointResourcesResource(): Project.Storepoints.Storepoint.Resources.Resource {
        return Project.Storepoints.Storepoint.Resources.Resource()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Activities]
     *
     */
    fun createProjectStorepointsStorepointActivities(): Project.Storepoints.Storepoint.Activities {
        return Project.Storepoints.Storepoint.Activities()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Activities.Activity]
     *
     */
    fun createProjectStorepointsStorepointActivitiesActivity(): Project.Storepoints.Storepoint.Activities.Activity {
        return Project.Storepoints.Storepoint.Activities.Activity()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.ActivityCodes]
     *
     */
    fun createProjectStorepointsStorepointActivityCodes(): Project.Storepoints.Storepoint.ActivityCodes {
        return Project.Storepoints.Storepoint.ActivityCodes()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.ActivityCodes.Code]
     *
     */
    fun createProjectStorepointsStorepointActivityCodesCode(): Project.Storepoints.Storepoint.ActivityCodes.Code {
        return Project.Storepoints.Storepoint.ActivityCodes.Code()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Calendars]
     *
     */
    fun createProjectStorepointsStorepointCalendars(): Project.Storepoints.Storepoint.Calendars {
        return Project.Storepoints.Storepoint.Calendars()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Calendars.Calendar]
     *
     */
    fun createProjectStorepointsStorepointCalendarsCalendar(): Project.Storepoints.Storepoint.Calendars.Calendar {
        return Project.Storepoints.Storepoint.Calendars.Calendar()
    }

    /**
     * Create an instance of [Project.Settings]
     *
     */
    fun createProjectSettings(): Project.Settings {
        return Project.Settings()
    }

    /**
     * Create an instance of [Project.Settings.Export]
     *
     */
    fun createProjectSettingsExport(): Project.Settings.Export {
        return Project.Settings.Export()
    }

    /**
     * Create an instance of [Project.CpmChecker.Parameters]
     *
     */
    fun createProjectCpmCheckerParameters(): Project.CpmChecker.Parameters {
        return Project.CpmChecker.Parameters()
    }

    /**
     * Create an instance of [Project.Filters.Filter.Criteria]
     *
     */
    fun createProjectFiltersFilterCriteria(): Project.Filters.Filter.Criteria {
        return Project.Filters.Filter.Criteria()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.ResourceGraphLayout]
     *
     */
    fun createProjectLayoutsLayoutResourceGraphLayout(): Project.Layouts.Layout.ResourceGraphLayout {
        return Project.Layouts.Layout.ResourceGraphLayout()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Sightlines]
     *
     */
    fun createProjectLayoutsLayoutSightlines(): Project.Layouts.Layout.Sightlines {
        return Project.Layouts.Layout.Sightlines()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.AppliedFilters]
     *
     */
    fun createProjectLayoutsLayoutAppliedFilters(): Project.Layouts.Layout.AppliedFilters {
        return Project.Layouts.Layout.AppliedFilters()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.DateFormat]
     *
     */
    fun createProjectLayoutsLayoutDateFormat(): Project.Layouts.Layout.DateFormat {
        return Project.Layouts.Layout.DateFormat()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.PageLayout]
     *
     */
    fun createProjectLayoutsLayoutPageLayout(): Project.Layouts.Layout.PageLayout {
        return Project.Layouts.Layout.PageLayout()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Currency]
     *
     */
    fun createProjectLayoutsLayoutCurrency(): Project.Layouts.Layout.Currency {
        return Project.Layouts.Layout.Currency()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.ViewSettings.ScrollPosition]
     *
     */
    fun createProjectLayoutsLayoutViewSettingsScrollPosition(): Project.Layouts.Layout.ViewSettings.ScrollPosition {
        return Project.Layouts.Layout.ViewSettings.ScrollPosition()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.ViewSettings.DevicePerBase]
     *
     */
    fun createProjectLayoutsLayoutViewSettingsDevicePerBase(): Project.Layouts.Layout.ViewSettings.DevicePerBase {
        return Project.Layouts.Layout.ViewSettings.DevicePerBase()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.ViewSettings.Zoom]
     *
     */
    fun createProjectLayoutsLayoutViewSettingsZoom(): Project.Layouts.Layout.ViewSettings.Zoom {
        return Project.Layouts.Layout.ViewSettings.Zoom()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.RolledupStates.Rolledup]
     *
     */
    fun createProjectLayoutsLayoutRolledupStatesRolledup(): Project.Layouts.Layout.RolledupStates.Rolledup {
        return Project.Layouts.Layout.RolledupStates.Rolledup()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.NetworkLines.NetworkActivity]
     *
     */
    fun createProjectLayoutsLayoutNetworkLinesNetworkActivity(): Project.Layouts.Layout.NetworkLines.NetworkActivity {
        return Project.Layouts.Layout.NetworkLines.NetworkActivity()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.CodeOptions.CodeOption]
     *
     */
    fun createProjectLayoutsLayoutCodeOptionsCodeOption(): Project.Layouts.Layout.CodeOptions.CodeOption {
        return Project.Layouts.Layout.CodeOptions.CodeOption()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Bars.BarGroup.Bar]
     *
     */
    fun createProjectLayoutsLayoutBarsBarGroupBar(): Project.Layouts.Layout.Bars.BarGroup.Bar {
        return Project.Layouts.Layout.Bars.BarGroup.Bar()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Bars.BarGroup.Text]
     *
     */
    fun createProjectLayoutsLayoutBarsBarGroupText(): Project.Layouts.Layout.Bars.BarGroup.Text {
        return Project.Layouts.Layout.Bars.BarGroup.Text()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Timescale.Tier]
     *
     */
    fun createProjectLayoutsLayoutTimescaleTier(): Project.Layouts.Layout.Timescale.Tier {
        return Project.Layouts.Layout.Timescale.Tier()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Comparisons.Comparison]
     *
     */
    fun createProjectLayoutsLayoutComparisonsComparison(): Project.Layouts.Layout.Comparisons.Comparison {
        return Project.Layouts.Layout.Comparisons.Comparison()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Columns.Column]
     *
     */
    fun createProjectLayoutsLayoutColumnsColumn(): Project.Layouts.Layout.Columns.Column {
        return Project.Layouts.Layout.Columns.Column()
    }

    /**
     * Create an instance of [Project.Layouts.Layout.Sort.SortColumn]
     *
     */
    fun createProjectLayoutsLayoutSortSortColumn(): Project.Layouts.Layout.Sort.SortColumn {
        return Project.Layouts.Layout.Sort.SortColumn()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Relationships.Relationship]
     *
     */
    fun createProjectStorepointsStorepointRelationshipsRelationship(): Project.Storepoints.Storepoint.Relationships.Relationship {
        return Project.Storepoints.Storepoint.Relationships.Relationship()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Resources.Resource.Assignment]
     *
     */
    fun createProjectStorepointsStorepointResourcesResourceAssignment(): Project.Storepoints.Storepoint.Resources.Resource.Assignment {
        return Project.Storepoints.Storepoint.Resources.Resource.Assignment()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Activities.Activity.CodeAssignment]
     *
     */
    fun createProjectStorepointsStorepointActivitiesActivityCodeAssignment(): Project.Storepoints.Storepoint.Activities.Activity.CodeAssignment {
        return Project.Storepoints.Storepoint.Activities.Activity.CodeAssignment()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.ActivityCodes.Code.Value]
     *
     */
    fun createProjectStorepointsStorepointActivityCodesCodeValue(): Project.Storepoints.Storepoint.ActivityCodes.Code.Value {
        return Project.Storepoints.Storepoint.ActivityCodes.Code.Value()
    }

    /**
     * Create an instance of [Project.Storepoints.Storepoint.Calendars.Calendar.NonWork]
     *
     */
    fun createProjectStorepointsStorepointCalendarsCalendarNonWork(): Project.Storepoints.Storepoint.Calendars.Calendar.NonWork {
        return Project.Storepoints.Storepoint.Calendars.Calendar.NonWork()
    }

    /**
     * Create an instance of [Project.Settings.Export.Sdef]
     *
     */
    fun createProjectSettingsExportSdef(): Project.Settings.Export.Sdef {
        return Project.Settings.Export.Sdef()
    }

}
