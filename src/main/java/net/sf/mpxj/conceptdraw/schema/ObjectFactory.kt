//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.07.12 at 04:42:45 PM BST 
//

package net.sf.mpxj.conceptdraw.schema

import javax.xml.bind.JAXBElement
import javax.xml.bind.annotation.XmlElementDecl
import javax.xml.bind.annotation.XmlRegistry
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter
import javax.xml.namespace.QName
import net.sf.mpxj.Priority

/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the net.sf.mpxj.conceptdraw.schema package.
 *
 * An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
/**
 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sf.mpxj.conceptdraw.schema
 *
 */
@XmlRegistry
class ObjectFactory {

    /**
     * Create an instance of [StyleProject]
     *
     */
    fun createStyleProject(): StyleProject {
        return StyleProject()
    }

    /**
     * Create an instance of [Document]
     *
     */
    fun createDocument(): Document {
        return Document()
    }

    /**
     * Create an instance of [ViewProperties]
     *
     */
    fun createViewProperties(): ViewProperties {
        return ViewProperties()
    }

    /**
     * Create an instance of [Callouts]
     *
     */
    fun createCallouts(): Callouts {
        return Callouts()
    }

    /**
     * Create an instance of [PPVItemsType]
     *
     */
    fun createPPVItemsType(): PPVItemsType {
        return PPVItemsType()
    }

    /**
     * Create an instance of [PPVItemsType.PPVItem]
     *
     */
    fun createPPVItemsTypePPVItem(): PPVItemsType.PPVItem {
        return PPVItemsType.PPVItem()
    }

    /**
     * Create an instance of [PPVItemsType.PPVItem.CompleteJournal]
     *
     */
    fun createPPVItemsTypePPVItemCompleteJournal(): PPVItemsType.PPVItem.CompleteJournal {
        return PPVItemsType.PPVItem.CompleteJournal()
    }

    /**
     * Create an instance of [ViewProperties.GridColumns]
     *
     */
    fun createViewPropertiesGridColumns(): ViewProperties.GridColumns {
        return ViewProperties.GridColumns()
    }

    /**
     * Create an instance of [Document.Dashboards]
     *
     */
    fun createDocumentDashboards(): Document.Dashboards {
        return Document.Dashboards()
    }

    /**
     * Create an instance of [Document.Links]
     *
     */
    fun createDocumentLinks(): Document.Links {
        return Document.Links()
    }

    /**
     * Create an instance of [Document.Projects]
     *
     */
    fun createDocumentProjects(): Document.Projects {
        return Document.Projects()
    }

    /**
     * Create an instance of [Document.Projects.Project]
     *
     */
    fun createDocumentProjectsProject(): Document.Projects.Project {
        return Document.Projects.Project()
    }

    /**
     * Create an instance of [Document.Projects.Project.Task]
     *
     */
    fun createDocumentProjectsProjectTask(): Document.Projects.Project.Task {
        return Document.Projects.Project.Task()
    }

    /**
     * Create an instance of [Document.Projects.Project.Task.ResourceAssignments]
     *
     */
    fun createDocumentProjectsProjectTaskResourceAssignments(): Document.Projects.Project.Task.ResourceAssignments {
        return Document.Projects.Project.Task.ResourceAssignments()
    }

    /**
     * Create an instance of [Document.Resources]
     *
     */
    fun createDocumentResources(): Document.Resources {
        return Document.Resources()
    }

    /**
     * Create an instance of [Document.Calendars]
     *
     */
    fun createDocumentCalendars(): Document.Calendars {
        return Document.Calendars()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar]
     *
     */
    fun createDocumentCalendarsCalendar(): Document.Calendars.Calendar {
        return Document.Calendars.Calendar()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar.ExceptedDays]
     *
     */
    fun createDocumentCalendarsCalendarExceptedDays(): Document.Calendars.Calendar.ExceptedDays {
        return Document.Calendars.Calendar.ExceptedDays()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar.ExceptedDays.ExceptedDay]
     *
     */
    fun createDocumentCalendarsCalendarExceptedDaysExceptedDay(): Document.Calendars.Calendar.ExceptedDays.ExceptedDay {
        return Document.Calendars.Calendar.ExceptedDays.ExceptedDay()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar.ExceptedDays.ExceptedDay.TimePeriods]
     *
     */
    fun createDocumentCalendarsCalendarExceptedDaysExceptedDayTimePeriods(): Document.Calendars.Calendar.ExceptedDays.ExceptedDay.TimePeriods {
        return Document.Calendars.Calendar.ExceptedDays.ExceptedDay.TimePeriods()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar.WeekDays]
     *
     */
    fun createDocumentCalendarsCalendarWeekDays(): Document.Calendars.Calendar.WeekDays {
        return Document.Calendars.Calendar.WeekDays()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar.WeekDays.WeekDay]
     *
     */
    fun createDocumentCalendarsCalendarWeekDaysWeekDay(): Document.Calendars.Calendar.WeekDays.WeekDay {
        return Document.Calendars.Calendar.WeekDays.WeekDay()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar.WeekDays.WeekDay.TimePeriods]
     *
     */
    fun createDocumentCalendarsCalendarWeekDaysWeekDayTimePeriods(): Document.Calendars.Calendar.WeekDays.WeekDay.TimePeriods {
        return Document.Calendars.Calendar.WeekDays.WeekDay.TimePeriods()
    }

    /**
     * Create an instance of [Document.Markers]
     *
     */
    fun createDocumentMarkers(): Document.Markers {
        return Document.Markers()
    }

    /**
     * Create an instance of [StyleProject.GridRowStyle]
     *
     */
    fun createStyleProjectGridRowStyle(): StyleProject.GridRowStyle {
        return StyleProject.GridRowStyle()
    }

    /**
     * Create an instance of [Hyperlinks]
     *
     */
    fun createHyperlinks(): Hyperlinks {
        return Hyperlinks()
    }

    /**
     * Create an instance of [Document.WorkspaceProperties]
     *
     */
    fun createDocumentWorkspaceProperties(): Document.WorkspaceProperties {
        return Document.WorkspaceProperties()
    }

    /**
     * Create an instance of [Document.PrintingProperties]
     *
     */
    fun createDocumentPrintingProperties(): Document.PrintingProperties {
        return Document.PrintingProperties()
    }

    /**
     * Create an instance of [Document.ResourceUsageDiagram]
     *
     */
    fun createDocumentResourceUsageDiagram(): Document.ResourceUsageDiagram {
        return Document.ResourceUsageDiagram()
    }

    /**
     * Create an instance of [Document.ProjectPortfolioView]
     *
     */
    fun createDocumentProjectPortfolioView(): Document.ProjectPortfolioView {
        return Document.ProjectPortfolioView()
    }

    /**
     * Create an instance of [ActiveFilter]
     *
     */
    fun createActiveFilter(): ActiveFilter {
        return ActiveFilter()
    }

    /**
     * Create an instance of [TimeScale]
     *
     */
    fun createTimeScale(): TimeScale {
        return TimeScale()
    }

    /**
     * Create an instance of [Callouts.Callout]
     *
     */
    fun createCalloutsCallout(): Callouts.Callout {
        return Callouts.Callout()
    }

    /**
     * Create an instance of [PPVItemsType.PPVItem.CompleteJournal.CompleteJournalEntry]
     *
     */
    fun createPPVItemsTypePPVItemCompleteJournalCompleteJournalEntry(): PPVItemsType.PPVItem.CompleteJournal.CompleteJournalEntry {
        return PPVItemsType.PPVItem.CompleteJournal.CompleteJournalEntry()
    }

    /**
     * Create an instance of [ViewProperties.GridColumns.Column]
     *
     */
    fun createViewPropertiesGridColumnsColumn(): ViewProperties.GridColumns.Column {
        return ViewProperties.GridColumns.Column()
    }

    /**
     * Create an instance of [Document.Dashboards.Dashboard]
     *
     */
    fun createDocumentDashboardsDashboard(): Document.Dashboards.Dashboard {
        return Document.Dashboards.Dashboard()
    }

    /**
     * Create an instance of [Document.Links.Link]
     *
     */
    fun createDocumentLinksLink(): Document.Links.Link {
        return Document.Links.Link()
    }

    /**
     * Create an instance of [Document.Projects.Project.Task.ResourceAssignments.ResourceAssignment]
     *
     */
    fun createDocumentProjectsProjectTaskResourceAssignmentsResourceAssignment(): Document.Projects.Project.Task.ResourceAssignments.ResourceAssignment {
        return Document.Projects.Project.Task.ResourceAssignments.ResourceAssignment()
    }

    /**
     * Create an instance of [Document.Resources.Resource]
     *
     */
    fun createDocumentResourcesResource(): Document.Resources.Resource {
        return Document.Resources.Resource()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar.ExceptedDays.ExceptedDay.TimePeriods.TimePeriod]
     *
     */
    fun createDocumentCalendarsCalendarExceptedDaysExceptedDayTimePeriodsTimePeriod(): Document.Calendars.Calendar.ExceptedDays.ExceptedDay.TimePeriods.TimePeriod {
        return Document.Calendars.Calendar.ExceptedDays.ExceptedDay.TimePeriods.TimePeriod()
    }

    /**
     * Create an instance of [Document.Calendars.Calendar.WeekDays.WeekDay.TimePeriods.TimePeriod]
     *
     */
    fun createDocumentCalendarsCalendarWeekDaysWeekDayTimePeriodsTimePeriod(): Document.Calendars.Calendar.WeekDays.WeekDay.TimePeriods.TimePeriod {
        return Document.Calendars.Calendar.WeekDays.WeekDay.TimePeriods.TimePeriod()
    }

    /**
     * Create an instance of [Document.Markers.Marker]
     *
     */
    fun createDocumentMarkersMarker(): Document.Markers.Marker {
        return Document.Markers.Marker()
    }

    /**
     * Create an instance of [JAXBElement]`<`[String]`>`}
     *
     */
    @XmlElementDecl(namespace = "http://www.schemas.conceptdraw.com/cdprj/document.xsd", name = "OutlineNumber")
    fun createOutlineNumber(value: String): JAXBElement<String> {
        return JAXBElement<String>(_OutlineNumber_QNAME, String::class.java, null, value)
    }

    /**
     * Create an instance of [JAXBElement]`<`[Priority]`>`}
     *
     */
    @XmlElementDecl(namespace = "http://www.schemas.conceptdraw.com/cdprj/document.xsd", name = "Priority")
    @XmlJavaTypeAdapter(Adapter7::class)
    fun createPriority(value: Priority): JAXBElement<Priority> {
        return JAXBElement<Priority>(_Priority_QNAME, Priority::class.java, null, value)
    }

    companion object {

        private val _OutlineNumber_QNAME = QName("http://www.schemas.conceptdraw.com/cdprj/document.xsd", "OutlineNumber")
        private val _Priority_QNAME = QName("http://www.schemas.conceptdraw.com/cdprj/document.xsd", "Priority")
    }

}
