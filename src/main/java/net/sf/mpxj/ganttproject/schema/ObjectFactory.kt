//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2017.12.28 at 05:49:44 PM GMT
//

package net.sf.mpxj.ganttproject.schema

import javax.xml.bind.annotation.XmlRegistry

/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the net.sf.mpxj.ganttproject.schema package.
 *
 * An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
/**
 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sf.mpxj.ganttproject.schema
 *
 */
@XmlRegistry
class ObjectFactory {

    /**
     * Create an instance of [Project]
     *
     */
    fun createProject(): Project {
        return Project()
    }

    /**
     * Create an instance of [View]
     *
     */
    fun createView(): View {
        return View()
    }

    /**
     * Create an instance of [Calendars]
     *
     */
    fun createCalendars(): Calendars {
        return Calendars()
    }

    /**
     * Create an instance of [Tasks]
     *
     */
    fun createTasks(): Tasks {
        return Tasks()
    }

    /**
     * Create an instance of [Resources]
     *
     */
    fun createResources(): Resources {
        return Resources()
    }

    /**
     * Create an instance of [Allocations]
     *
     */
    fun createAllocations(): Allocations {
        return Allocations()
    }

    /**
     * Create an instance of [Vacations]
     *
     */
    fun createVacations(): Vacations {
        return Vacations()
    }

    /**
     * Create an instance of [Roles]
     *
     */
    fun createRoles(): Roles {
        return Roles()
    }

    /**
     * Create an instance of [Date]
     *
     */
    fun createDate(): Date {
        return Date()
    }

    /**
     * Create an instance of [Role]
     *
     */
    fun createRole(): Role {
        return Role()
    }

    /**
     * Create an instance of [Depend]
     *
     */
    fun createDepend(): Depend {
        return Depend()
    }

    /**
     * Create an instance of [DayTypes]
     *
     */
    fun createDayTypes(): DayTypes {
        return DayTypes()
    }

    /**
     * Create an instance of [CustomTaskProperty]
     *
     */
    fun createCustomTaskProperty(): CustomTaskProperty {
        return CustomTaskProperty()
    }

    /**
     * Create an instance of [CustomPropertyDefinition]
     *
     */
    fun createCustomPropertyDefinition(): CustomPropertyDefinition {
        return CustomPropertyDefinition()
    }

    /**
     * Create an instance of [Rate]
     *
     */
    fun createRate(): Rate {
        return Rate()
    }

    /**
     * Create an instance of [DayType]
     *
     */
    fun createDayType(): DayType {
        return DayType()
    }

    /**
     * Create an instance of [Taskproperty]
     *
     */
    fun createTaskproperty(): Taskproperty {
        return Taskproperty()
    }

    /**
     * Create an instance of [OnlyShowWeekends]
     *
     */
    fun createOnlyShowWeekends(): OnlyShowWeekends {
        return OnlyShowWeekends()
    }

    /**
     * Create an instance of [Vacation]
     *
     */
    fun createVacation(): Vacation {
        return Vacation()
    }

    /**
     * Create an instance of [Allocation]
     *
     */
    fun createAllocation(): Allocation {
        return Allocation()
    }

    /**
     * Create an instance of [Resource]
     *
     */
    fun createResource(): Resource {
        return Resource()
    }

    /**
     * Create an instance of [Taskproperties]
     *
     */
    fun createTaskproperties(): Taskproperties {
        return Taskproperties()
    }

    /**
     * Create an instance of [Task]
     *
     */
    fun createTask(): Task {
        return Task()
    }

    /**
     * Create an instance of [Field]
     *
     */
    fun createField(): Field {
        return Field()
    }

    /**
     * Create an instance of [CustomResourceProperty]
     *
     */
    fun createCustomResourceProperty(): CustomResourceProperty {
        return CustomResourceProperty()
    }

    /**
     * Create an instance of [DefaultWeek]
     *
     */
    fun createDefaultWeek(): DefaultWeek {
        return DefaultWeek()
    }

}
